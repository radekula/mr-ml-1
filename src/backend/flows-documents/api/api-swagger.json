{
  "swagger": "2.0",
  "info": {
    "description": "This is description of flows-documents API",
    "version": "0.1",
    "title": "flows-documents"
  },
  "basePath": "/",
  "tags": [
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/start/{token}": {
      "post": {
        "tags": [
          "flows-documents"
        ],
        "summary": "Start a flow for a document",
        "description": "Start a flow for a document",
        "operationId": "flowStart",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation (or system user token)",
            "required": true,
            "type": "string"
          },
          {
            "name": "flow_document",
            "in": "body",
            "description": "Start data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartFlowData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Invalid document ID or flow ID"
          },
          "409": {
            "description": "There is already a flow for this document"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/status/{id}/{token}": {
      "get": {
        "tags": [
          "flows-documents"
        ],
        "summary": "Get information about document status in flow",
        "description": "Get information about document status in flow.",
        "operationId": "flowStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/StatusData"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Document not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/action/{id}/{step}/{token}": {
      "put": {
        "tags": [
          "flows-documents"
        ],
        "summary": "Perform a user action for a step",
        "description": "Depending on a step type action is performed.",
        "operationId": "actionDo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "string"
          },
          {
            "name": "step",
            "in": "path",
            "description": "Step ID where action will be performed",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Invalid document ID or step ID"
          },
          "406": {
            "description": "User cannot perform this action (not assigned to step)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "flows-documents"
        ],
        "summary": "Delete a user action for a step",
        "description": "Delete a previous performed action for a document.",
        "operationId": "actionDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "string"
          },
          {
            "name": "step",
            "in": "path",
            "description": "Step ID where action will be performed",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Invalid document ID or step ID"
          },
          "406": {
            "description": "User cannot perform this action (not assigned to step)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/force/{id}/{step}/{token}": {
      "put": {
        "tags": [
          "flows-documents"
        ],
        "summary": "Force document to next step",
        "description": "Force document to next step. Only administrator can perform this action",
        "operationId": "flowForce",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "step",
            "in": "path",
            "description": "Step ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation (administrator)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Invalid document ID or step ID"
          },
          "406": {
            "description": "User cannot perform this action (not adminitrator)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "StartFlowData": {
      "type": "object",
      "properties": {
        "document": {
          "type": "string",
          "description": "Document ID"
        },
        "flow": {
          "type": "string",
          "description": "Flow ID"
        }
      }
    },
    "StatusData": {
      "type": "object",
      "properties": {
        "document": {
          "type": "string",
          "description": "Document ID"
        },
        "flow": {
          "type": "string",
          "description": "Flow ID"
        },
        "current_steps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Current step ID"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoryData"
          }
        }
      }
    },
    "HistoryData": {
      "type": "object",
      "properties": {
        "step": {
          "type": "string",
          "description": "Step ID"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoryActionData"
          }
        }
      }
    },
    "HistoryActionData": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "description": "User login performing action"
        },
        "action": {
          "type": "string",
          "enum": ["accept", "view", "sign", "force_next"],
          "description": "Type of action:\naccept - user accepted document\nview - user viewed document\nsign - user signed document\nforce_next - document was forced to next step"
        },
        "date": {
          "type": "string",
          "description": "Date of action. Timestamp in YYYY-MM-DD HH:MM:SS format"
        }
      }
    }
  }
}
