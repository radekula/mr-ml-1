{
  "swagger": "2.0",
  "info": {
    "description": "This is description of signing API",
    "version": "0.1",
    "title": "signing"
  },
  "basePath": "/",
  "tags": [
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/{login}/keys/{token}": {
      "get": {
        "tags": [
          "keys"
        ],
        "summary": "Get user public key",
        "description": "Get user public key",
        "operationId": "getKey",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "User login",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "public_key": {
                  "type": "string",
                  "description": "User public key"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "User or key not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "keys"
        ],
        "summary": "Add or update user keys",
        "description": "Add or update user keys",
        "operationId": "putKeys",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "User login",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          },
          {
            "name": "keys data",
            "in": "body",
            "description": "Keys data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewKeysData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation succesful"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/document/{document}/{token}": {
      "get": {
        "tags": [
          "signing"
        ],
        "summary": "Get document with signing informations",
        "description": "Get document with signing informations (cached data).",
        "operationId": "getDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "document",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SigningData"
            }
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Document not found in signing database"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sign/{document}/{token}": {
      "put": {
        "tags": [
          "signing"
        ],
        "summary": "Sign document",
        "description": "Sign document",
        "operationId": "signDocument",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "document",
            "in": "path",
            "description": "ID of a document to sign",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing signing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Document not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/unsign/{document}/{token}": {
      "delete": {
        "tags": [
          "signing"
        ],
        "summary": "Unsign document",
        "description": "Unsign document",
        "operationId": "unsignDocument",
        "parameters": [
          {
            "name": "document",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing unsign operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Sign not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/verify/{document}/{login}/{token}": {
      "get": {
        "tags": [
          "verify"
        ],
        "summary": "Verify if document in signed by user",
        "description": "Verify if document in signed by user by performing real verification (not cached)",
        "operationId": "steps",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "document",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "login",
            "in": "path",
            "description": "User login",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token of user performing operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation - document is signed by user"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Invalid token or token expired"
          },
          "404": {
            "description": "Document or sign not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "NewKeysData": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string",
          "description": "Public key"
        },
        "private_key": {
          "type": "string",
          "description": "Private key"
        }
      }
    },
    "SignData": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "description": "User login"
        },
        "sign_date": {
          "type": "string",
          "description": "Sign date in YYYY-MM-DD HH:MM:SS format"
        },
        "signature": {
          "type": "string",
          "description": "Signing signature"
        }
      }
    },
    "SigningData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SignData"
      }
    }
  }
}
